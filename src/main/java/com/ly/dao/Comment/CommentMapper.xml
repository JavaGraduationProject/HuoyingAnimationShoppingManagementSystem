<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 namespace：必须有值，自定义的唯一字符串
 推荐使用：dao 接口的全限定名称
-->
<mapper namespace="com.ly.dao.Comment.CommentMapper">
    <!--
    <select>: 查询数据， 标签中必须是 select 语句
    id: sql 语句的自定义名称，推荐使用 dao 接口中方法名称，也就是StudentDao接口
    使用名称表示要执行的 sql 语句
    resultType: 查询语句的返回结果数据类型，使用全限定类名,这里填domain中的Student实体类的reference
    -->
    <!--查询所有表情-->
    <select id="allEmoji" resultType="com.ly.pojo.Emoji">
        <!--要执行的 sql 语句-->
        select * from emoji
    </select>
    <!--查询所有评论-->
    <select id="allComment" resultType="com.ly.pojo.Comment">
        <!--要执行的 sql 语句-->
        select * from comment
    </select>
    <!--新增评论-->
    <insert id="addComment" parameterType="com.ly.pojo.Comment">
        insert into comment(commentName,commentImg,commentMain)
        values ( #{commentName},#{commentImg},#{commentMain})
    </insert>
    <!--删除评论-->
    <delete id="deleteCommentById" parameterType="int">
        delete
        from comment
        where commentId = #{commentId}
    </delete>
    <!--修改用户名字和头像-->
    <update id="updateCommentPersonalName" parameterType="com.ly.pojo.Comment">
        update comment
        set commentName = #{commentNewName},commentImg = #{commentImg}
        where commentName = #{commentName}
    </update>
</mapper>
