<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 namespace：必须有值，自定义的唯一字符串
 推荐使用：dao 接口的全限定名称
-->
<mapper namespace="com.ly.dao.HyrzIntroduce.HyrzIntroduceMapper">
    <!--
    <select>: 查询数据， 标签中必须是 select 语句
    id: sql 语句的自定义名称，推荐使用 dao 接口中方法名称，也就是StudentDao接口
    使用名称表示要执行的 sql 语句
    resultType: 查询语句的返回结果数据类型，使用全限定类名,这里填domain中的Student实体类的reference
    -->
    <select id="selectHyrzIntroduce" resultType="com.ly.pojo.HyrzIntroduce">
        <!--要执行的 sql 语句-->
        select * from hyrzIntroduce
        <where>
            hyrzIntroduceName="火影介绍"
        </where>
    </select>
    <!--查询漩涡鸣人-->
    <select id="Selectxuanwomingren" resultType="com.ly.pojo.HyrzIntroduce">
        <!--要执行的 sql 语句-->
        select * from hyrzIntroduce
        <where>
            hyrzIntroduceName="漩涡鸣人"
        </where>
    </select>
    <!--查询佐助-->
    <select id="Selectzhuzhu" resultType="com.ly.pojo.HyrzIntroduce">
        <!--要执行的 sql 语句-->
        select * from hyrzIntroduce
        <where>
            hyrzIntroduceName="佐助"
        </where>
    </select>
    <!--更新时点击该模块的修改，根据该模块的id去查找信息-->
    <select id="queryIntroduceById" resultType="com.ly.pojo.HyrzIntroduce">
        <!--要执行的 sql 语句-->
        select * from hyrzIntroduce
        <where>
            hyrzIntroduceId = #{hyrzIntroduceId}
        </where>
    </select>
    <!--修改模块内容-->
    <update id="updateIntroduce" parameterType="com.ly.pojo.HyrzIntroduce">
        update hyrzIntroduce
        set hyrzIntroduceMain = #{hyrzIntroduceMain}
        where hyrzIntroduceId = #{hyrzIntroduceId}
    </update>
</mapper>
