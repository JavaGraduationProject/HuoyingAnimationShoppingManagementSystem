<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 namespace：必须有值，自定义的唯一字符串
 推荐使用：dao 接口的全限定名称
-->
<mapper namespace="com.ly.dao.Refund.RefundMapper">
    <!--
    <select>: 查询数据， 标签中必须是 select 语句
    id: sql 语句的自定义名称，推荐使用 dao 接口中方法名称，也就是StudentDao接口
    使用名称表示要执行的 sql 语句
    resultType: 查询语句的返回结果数据类型，使用全限定类名,这里填domain中的Student实体类的reference
    -->
    <!--用户申请退款处理-->
    <insert id="addFigureRefund" parameterType="com.ly.pojo.Refund">
        insert into refund
        values (#{orderId},#{userid},#{username},#{figureId},#{figureName},
                #{figureImage},#{refundType},#{refundReason},#{refundTime},'未处理');
    </insert>

    <!--//通过orderId查询用户提交的申请-->
    <select id="queryRefundByOrderId" resultType="com.ly.pojo.Refund">
        select *
        from refund
        where orderId=#{orderId};
    </select>

    <!--管理员查看所有退款提交-->
    <select id="queryAllRefund" resultMap="allRefund">
        select r.orderId orderId,r.figureImage figureImage,r.refundType refundType,r.refundReason refundReason,
               r.refundTime refundTime,r.refundStatus refundStatus,o.userid userid,o.figureId figureId,
               o.deliveryStatus deliveryStatus,o.isreceive isreceive,f.figureName figureName,u.username username
        from refund r, `order` o,figure f,user u
        where r.orderId=o.orderId and o.figureId=f.figureId and o.userid=u.userid
    </select>
    <resultMap id="allRefund" type="com.ly.pojo.Refund">
        <result property="orderId" column="orderId"/>
        <result property="figureImage" column="figureImage"/>
        <result property="refundType" column="refundType"/>
        <result property="refundReason" column="refundReason"/>
        <result property="refundTime" column="refundTime"/>
        <result property="refundStatus" column="refundStatus"/>
        <association property="order" javaType="com.ly.pojo.Order">
            <result property="userid" column="userid"/>
            <result property="figureId" column="figureId"/>
            <result property="deliveryStatus" column="deliveryStatus"/>
            <result property="isreceive" column="isreceive"/>
            <association property="figure" javaType="com.ly.pojo.Figure">
                <result property="figureName" column="figureName"/>
<!--                <result property="figureImage" column="figureImage"/>-->
            </association>
            <association property="user" javaType="com.ly.pojo.User">
                <result property="username" column="username"/>
            </association>
        </association>
    </resultMap>
    <!--删除退款处理-->
    <delete id="deleteRefund">
        delete
        from refund
        where orderId=#{orderId};
    </delete>
    <!--管理员审核通过用户上传的资源，并更新用户那边的上传审核状态为“审核通过”-->
    <update id="AdminUpdateApplyOrder" parameterType="com.ly.pojo.Refund">
        update refund
        set refundStatus = '审核通过'
        where orderId = #{orderId}
    </update>
    <!--管理员拒绝通过用户上传的资源，并更新用户那边的上传审核状态为“审核不通过”-->
    <update id="AdminReduceApplyOrder" parameterType="com.ly.pojo.Refund">
        update refund
        set refundStatus = '审核不通过'
        where orderId = #{orderId}
    </update>
    <!--根据用户的userid查询该用户的订单售后请求信息-->
    <select id="UserQueryApplyOrderByUserid" resultType="com.ly.pojo.Refund">
        <!--要执行的 sql 语句-->
        select * from refund
        where userid = #{userid}
    </select>
</mapper>
