<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 -->
    <context:component-scan base-package="com.ly.controller"/>
    <!-- 让Spring MVC不处理静态资源 过滤掉一些静态资源，如.css  .js  .html .mp3-->
    <mvc:default-servlet-handler/>
    <!--这个把静态资源处理，不加则无法显示css样式，statics是自己创的文件名，css文件放在了里面，文件为statics>css>index.css-->
<!--    <mvc:resources location="/WEB-INF/statics/" mapping="/statics/**"/>-->
    <mvc:resources location="/WEB-INF/statics/" mapping="/statics/**"/>
    <!--
    支持mvc注解驱动
        在spring中一般采用@RequestMapping注解来完成映射关系
        要想使@RequestMapping注解生效
        必须向上下文中注册DefaultAnnotationHandlerMapping
        和一个AnnotationMethodHandlerAdapter实例
        这两个实例分别在类级别和方法级别处理。
        而annotation-driven配置帮助我们自动完成上述两个实例的注入。
     -->
    <mvc:annotation-driven/>

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          id="internalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--JSON乱码问题配置-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

<!--    &lt;!&ndash;关于拦截器的配置&ndash;&gt;-->
<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->
<!--            <bean id="loginInterceptor" class="com.ly.interceptor.MyInterceptor2"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->
    <!--关于拦截器的配置-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/statics/**"/>
            <bean id="loginInterceptor" class="com.ly.interceptor.MyInterceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>
<!--&lt;!&ndash;    关于拦截器的配置&ndash;&gt;-->
<!--    <mvc:interceptors>  &lt;!&ndash;这里包含了多个拦截器&ndash;&gt;-->
<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash;/** 包括路径及其子路径&ndash;&gt;-->
<!--            &lt;!&ndash;/admin/* 拦截的是/admin/add等等这种 , /admin/add/user不会被拦截&ndash;&gt;-->
<!--            &lt;!&ndash;/admin/** 拦截的是/admin/下的所有&ndash;&gt;-->
<!--&lt;!&ndash;            <mvc:mapping path="/**"/>&ndash;&gt;-->
<!--&lt;!&ndash;            <mvc:mapping path="/ly/**"/>&ndash;&gt;-->
<!--            <mvc:mapping path="/jsp/**"/>-->
<!--            &lt;!&ndash;bean配置的就是拦截器&ndash;&gt;-->
<!--            <bean class="com.ly.interceptor.MyInterceptor"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->
    <!--文件上传配置-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 上传文件大小上限，单位为字节（10485760=10M） -->
        <property name="maxUploadSize" value="10485760"/>
        <property name="maxInMemorySize" value="1"/>
    </bean>
</beans>
